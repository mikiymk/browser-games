const std = @import("std");

const bit_board = @import("bit-board");
const Board = @import("Board.zig");

pub fn getMoveKing(b: Board, king_place: u64) u64 {
    const east_moves_mask = bit_board.fromString(
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
    , 'o');

    const west_moves_mask = bit_board.fromString(
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
    , 'o');

    const e_masked = king_place & east_moves_mask;
    const w_masked = king_place & west_moves_mask;

    const move_n_s: u64 = king_place >> 8 | king_place << 8;
    const move_e_ne_se: u64 = e_masked << 1 | e_masked << 9 | e_masked >> 7;
    const move_w_nw_sw: u64 = w_masked >> 1 | w_masked << 7 | w_masked >> 9;

    return ~b.getPlayer() & (move_n_s | move_e_ne_se | move_w_nw_sw);
}

test "get king's move 1: center" {
    const board_str =
        \\........
        \\........
        \\........
        \\........
        \\....k...
        \\........
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'k');

    const pawnmove = getMoveKing(board, pos);

    try bit_board.expectBitBoard(pawnmove,
        \\........
        \\........
        \\........
        \\...ooo..
        \\...o.o..
        \\...ooo..
        \\........
        \\........
    );
}

test "get knight's move 2: edge" {
    const board_str =
        \\........
        \\........
        \\........
        \\........
        \\k.......
        \\........
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'k');

    const pawnmove = getMoveKing(board, pos);

    try bit_board.expectBitBoard(pawnmove,
        \\........
        \\........
        \\........
        \\oo......
        \\.o......
        \\oo......
        \\........
        \\........
    );
}

test "get knight's move 3: with other pieces" {
    const board_str =
        \\........
        \\........
        \\........
        \\...BRr..
        \\...bkp..
        \\...nNP..
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'k');

    const pawnmove = getMoveKing(board, pos);

    try bit_board.expectBitBoard(pawnmove,
        \\........
        \\........
        \\........
        \\...oo...
        \\........
        \\....oo..
        \\........
        \\........
    );
}

test "get knight's move 4: multiple kings" {
    const board_str =
        \\........
        \\..k.....
        \\........
        \\........
        \\....k...
        \\........
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'k');

    const pawnmove = getMoveKing(board, pos);

    try bit_board.expectBitBoard(pawnmove,
        \\.ooo....
        \\.o.o....
        \\.ooo....
        \\...ooo..
        \\...o.o..
        \\...ooo..
        \\........
        \\........
    );
}
