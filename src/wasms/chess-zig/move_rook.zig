const std = @import("std");

const bit_board = @import("bit-board");
const Board = @import("Board.zig");

pub fn getMoveRook(b: Board, rook_place: u64, player_color: Board.Color) u64 {
    const ally_pieces = b.getColorPieces(player_color);
    const opponent_pieces = b.getColorPieces(player_color.turn());
    const empties = ~(ally_pieces | opponent_pieces);

    const mask = empties & bit_board.fromString(
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
        \\.oooooo.
    , 'o');

    const left_mask = bit_board.fromString(
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
        \\ooooooo.
    , 'o');
    const right_mask = bit_board.fromString(
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
        \\.ooooooo
    , 'o');

    var move_n_s = rook_place;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8) & empties;
    move_n_s |= (move_n_s << 8 | move_n_s >> 8);

    var move_e_w = rook_place;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 | move_e_w >> 1) & mask;
    move_e_w |= (move_e_w << 1 & right_mask) | (move_e_w >> 1 & left_mask);

    return ~ally_pieces & (move_n_s | move_e_w);
}

test "get rook's move 1: center" {
    const board_str =
        \\........
        \\........
        \\........
        \\........
        \\....r...
        \\........
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'r');

    const pawnmove = getMoveRook(board, pos, .white);

    try bit_board.expectBitBoard(pawnmove,
        \\....o...
        \\....o...
        \\....o...
        \\....o...
        \\oooo.ooo
        \\....o...
        \\....o...
        \\....o...
    );
}

test "get rook's move 2: edge" {
    const board_str =
        \\........
        \\........
        \\........
        \\r.......
        \\........
        \\........
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'r');

    const pawnmove = getMoveRook(board, pos, .white);

    try bit_board.expectBitBoard(pawnmove,
        \\o.......
        \\o.......
        \\o.......
        \\.ooooooo
        \\o.......
        \\o.......
        \\o.......
        \\o.......
    );
}

test "get rook's move 3: with other pieces" {
    const board_str =
        \\........
        \\........
        \\....N...
        \\........
        \\..n.r.b.
        \\........
        \\....B...
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'r');

    const pawnmove = getMoveRook(board, pos, .white);

    try bit_board.expectBitBoard(pawnmove,
        \\........
        \\........
        \\....o...
        \\....o...
        \\...o.o..
        \\....o...
        \\....o...
        \\........
    );
}

test "get rook's move 4: multiple rooks" {
    const board_str =
        \\........
        \\........
        \\..r.....
        \\........
        \\........
        \\.....r..
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'r');

    const pawnmove = getMoveRook(board, pos, .white);

    try bit_board.expectBitBoard(pawnmove,
        \\..o..o..
        \\..o..o..
        \\oo.ooooo
        \\..o..o..
        \\..o..o..
        \\ooooo.oo
        \\..o..o..
        \\..o..o..
    );
}

test "get rook's move 5: next to piece" {
    const board_str =
        \\........
        \\........
        \\........
        \\....p...
        \\...nrP..
        \\....N...
        \\........
        \\........
    ;

    const board = Board.fromString(board_str);
    const pos = bit_board.fromString(board_str, 'r');

    const pawnmove = getMoveRook(board, pos, .white);

    try bit_board.expectBitBoard(pawnmove,
        \\........
        \\........
        \\........
        \\........
        \\.....o..
        \\....o...
        \\........
        \\........
    );
}
