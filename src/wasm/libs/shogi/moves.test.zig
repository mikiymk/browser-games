// std import
const std = @import("std");
const builtin = @import("builtin");

// common import
const common = @import("../common/main.zig");
const BitBoard = common.bit_board.BitBoard(9, 9);

// internal import
const main = @import("./main.zig");
const Game = main.Game;
const Board = main.Board;
const moves = main.moves;

test "moves.getWhitePawnMovable: 先手の歩兵が動ける範囲" {
    const board_str =
        \\.........
        \\.........
        \\......L..
        \\......P..
        \\.........
        \\...nN....
        \\..PP.....
        \\.........
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'P'));

    try moved_board.expect(
        \\.........
        \\.........
        \\.........
        \\.........
        \\.........
        \\..oo.....
        \\.........
        \\.........
        \\.........
    );
}

test "moves.getBlackPawnMovable: 後手の歩兵が動ける範囲" {
    const board_str =
        \\.........
        \\.....p...
        \\.....np..
        \\......N..
        \\.........
        \\.........
        \\.........
        \\..p......
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'p'));

    try moved_board.expect(
        \\.........
        \\.........
        \\.........
        \\......o..
        \\.........
        \\.........
        \\.........
        \\.........
        \\..o......
    );
}

test "moves.getWhiteLanceMovable: 先手の香車が動ける範囲" {
    const board_str =
        \\.........
        \\..L......
        \\.........
        \\.........
        \\....n.N..
        \\.........
        \\.........
        \\....L.L..
        \\L........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'L'));

    try moved_board.expect(
        \\o.o......
        \\o........
        \\o........
        \\o........
        \\o...o....
        \\o...o.o..
        \\o...o.o..
        \\o........
        \\.........
    );
}

test "moves.getBlackLanceMovable: 後手の香車が動ける範囲" {
    const board_str =
        \\l........
        \\....l.l..
        \\.........
        \\.........
        \\....n.N..
        \\.........
        \\.........
        \\..l......
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'l'));

    try moved_board.expect(
        \\.........
        \\o........
        \\o...o.o..
        \\o...o.o..
        \\o.....o..
        \\o........
        \\o........
        \\o........
        \\o.o......
    );
}

test "moves.getWhiteKnightMovable: 先手の桂馬が動ける範囲" {
    const board_str =
        \\.........
        \\.........
        \\......n.N
        \\N........
        \\.......N.
        \\.........
        \\.ppp.....
        \\.pNp..N..
        \\.ppp.....
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'N'));

    try moved_board.expect(
        \\.......o.
        \\.o.......
        \\......o..
        \\.........
        \\.........
        \\.o.o.o.o.
        \\.........
        \\.........
        \\.........
    );
}

test "moves.getBlackKnightMovable: 後手の桂馬が動ける範囲" {
    const board_str =
        \\.PPP.....
        \\.PnP..n..
        \\.PPP.....
        \\.........
        \\n......n.
        \\.........
        \\......B.n
        \\.........
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'n'));

    try moved_board.expect(
        \\.........
        \\.........
        \\.........
        \\.o.o.o.o.
        \\.........
        \\.........
        \\.o....o..
        \\.........
        \\.......o.
    );
}

test "moves.silver: 銀将が動ける範囲" {
    const board_str =
        \\......S..
        \\.krb.....
        \\.lSn....S
        \\.gsp.....
        \\.........
        \\.........
        \\.........
        \\.S.......
        \\......S..
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'S'));

    try moved_board.expect(
        \\.........
        \\.ooo.o.oo
        \\.........
        \\.o.o...o.
        \\.........
        \\.........
        \\ooo......
        \\.....ooo.
        \\o.o......
    );
}

test "moves.gold: 金将が動ける範囲" {
    const board_str =
        \\......G..
        \\.krb.....
        \\.lGn....G
        \\.gsp.....
        \\.........
        \\.........
        \\.........
        \\.G.......
        \\......G..
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'G'));

    try moved_board.expect(
        \\.....o.o.
        \\.ooo..ooo
        \\.o.o...o.
        \\..o.....o
        \\.........
        \\.........
        \\ooo......
        \\o.o..ooo.
        \\.o...o.o.
    );
}

test "moves.bishop: 角行が動ける範囲" {
    const board_str =
        \\......B..
        \\.krb.....
        \\.lBn....B
        \\.gsp.....
        \\.........
        \\.........
        \\.........
        \\.B.......
        \\......B..
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'B'));

    const expected =
        \\........o
        \\.o.o.o.o.
        \\....o.o..
        \\.o.o.o.o.
        \\..o.o.o..
        \\...o.o...
        \\o.o.o...o
        \\...o.o.o.
        \\o.o......
    ;
    try moved_board.expect(expected);
}

test "moves.rook: 飛車が動ける範囲" {
    const board_str =
        \\......R..
        \\.krb.....
        \\.lRn....R
        \\.gsp.....
        \\.........
        \\.........
        \\.........
        \\.R.......
        \\......R..
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'R'));

    const expected =
        \\oooooo.oo
        \\..o...o.o
        \\.o.ooooo.
        \\.oo...o.o
        \\.o....o.o
        \\.o....o.o
        \\.o....o.o
        \\o.ooooooo
        \\oooooo.oo
    ;
    try moved_board.expect(expected);
}

test "moves.king: 王将が動ける範囲" {
    const board_str =
        \\......K..
        \\.krb.....
        \\.lKn....K
        \\.gsp.....
        \\.........
        \\.........
        \\.........
        \\.K.......
        \\......K..
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'K'));

    const expected =
        \\.....o.o.
        \\.ooo.oooo
        \\.o.o...o.
        \\.ooo...oo
        \\.........
        \\.........
        \\ooo......
        \\o.o..ooo.
        \\ooo..o.o.
    ;
    try moved_board.expect(expected);
}
