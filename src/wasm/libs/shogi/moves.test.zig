// std import
const std = @import("std");
const builtin = @import("builtin");

// common import
const common = @import("../common/main.zig");
const BitBoard = common.bit_board.BitBoard(9, 9);

// internal import
const main = @import("./main.zig");
const Game = main.Game;
const Board = main.Board;
const moves = main.moves;

test "moves.getWhitePawnMovable: 先手の歩兵が動ける範囲" {
    const board_str =
        \\.........
        \\.........
        \\......L..
        \\......P..
        \\.........
        \\...nN....
        \\..PP.....
        \\.........
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'P'));

    try BitBoard.expect(moved_board,
        \\.........
        \\.........
        \\.........
        \\.........
        \\.........
        \\..oo.....
        \\.........
        \\.........
        \\.........
    );
}

test "moves.getBlackPawnMovable: 後手の歩兵が動ける範囲" {
    const board_str =
        \\.........
        \\.....p...
        \\.....np..
        \\......N..
        \\.........
        \\.........
        \\.........
        \\..p......
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'p'));

    try BitBoard.expect(moved_board,
        \\.........
        \\.........
        \\.........
        \\......o..
        \\.........
        \\.........
        \\.........
        \\.........
        \\..o......
    );
}

test "moves.getWhiteLanceMovable: 先手の香車が動ける範囲" {
    const board_str =
        \\.........
        \\..L......
        \\.........
        \\.........
        \\....n.N..
        \\.........
        \\.........
        \\....L.L..
        \\L........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'L'));

    try BitBoard.expect(moved_board,
        \\o.o......
        \\o........
        \\o........
        \\o........
        \\o...o....
        \\o...o.o..
        \\o...o.o..
        \\o........
        \\.........
    );
}

test "moves.getBlackLanceMovable: 後手の香車が動ける範囲" {
    const board_str =
        \\l........
        \\....l.l..
        \\.........
        \\.........
        \\....n.N..
        \\.........
        \\.........
        \\..l......
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'l'));

    try BitBoard.expect(moved_board,
        \\.........
        \\o........
        \\o...o.o..
        \\o...o.o..
        \\o.....o..
        \\o........
        \\o........
        \\o........
        \\o.o......
    );
}

test "moves.getWhiteKnightMovable: 先手の桂馬が動ける範囲" {
    const board_str =
        \\.........
        \\.........
        \\......n.N
        \\N........
        \\.......N.
        \\.........
        \\.ppp.....
        \\.pNp..N..
        \\.ppp.....
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'N'));

    try BitBoard.expect(moved_board,
        \\.......o.
        \\.o.......
        \\......o..
        \\.........
        \\.........
        \\.o.o.o.o.
        \\.........
        \\.........
        \\.........
    );
}

test "moves.getBlackKnightMovable: 後手の桂馬が動ける範囲" {
    const board_str =
        \\.PPP.....
        \\.PnP..n..
        \\.PPP.....
        \\.........
        \\n......n.
        \\.........
        \\......B.n
        \\.........
        \\.........
    ;
    const board = Board.fromString(board_str);

    const moved_board = moves.move(board, BitBoard.fromString(board_str, 'n'));

    try BitBoard.expect(moved_board,
        \\.........
        \\.........
        \\.........
        \\.o.o.o.o.
        \\.........
        \\.........
        \\.o....o..
        \\.........
        \\.......o.
    );
}
